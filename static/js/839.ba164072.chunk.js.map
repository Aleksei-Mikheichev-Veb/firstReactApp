{"version":3,"file":"static/js/839.ba164072.chunk.js","mappings":"oSAKIA,EAA0B,SAACC,GAC3B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SCN3B,GAAgB,aAAe,iCAAiC,WAAa,gC,UCGvEE,EAAY,SAAC,GAAD,SAAGC,SAA0BC,EAAAA,aAAqBA,EAAAA,YAYpE,EAVmB,SAACC,GAEhB,OACI,gBAAKC,UAAWF,EAAAA,aAAhB,UACI,SAAC,KAAD,CAASG,GAAI,YAAcF,EAAMG,OAAQF,UAAWJ,EAApD,SAAgEG,EAAMI,cCTlF,GAAgB,QAAU,yBAAyB,kBAAoB,mCAAmC,kBAAoB,oCCA9H,KCYA,EAVgB,SAACJ,GAEb,OACI,gBAAKC,UAAWF,EAAAA,QAAhB,SACKC,EAAMK,mB,uCCGbC,GAAcC,EAAAA,EAAAA,IAAiB,IAC/BC,GAAWC,EAAAA,EAAAA,GAAQ,YAcnBC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,EAXD,SAACX,GACrB,OACI,kBAAMa,SAAUb,EAAMc,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAa,eAAgBC,KAAM,UAAWC,UAAWV,EAAUW,SAAU,CAACC,EAAAA,GAAUd,QAGnG,0BAAK,qDAuCjB,EA9BgB,SAACN,GAEb,IAAMqB,EAAsBrB,EAAMsB,aAAaC,KAAI,SAAAC,GAE/C,OAAO,SAAC,EAAD,CAAYrB,OAAQqB,EAAKC,GAAIrB,SAAUoB,EAAKpB,cAEjDsB,EAAyB1B,EAAMK,gBAAgBkB,KAAI,SAAAC,GAGrD,OAAO,SAAC,EAAD,CAASG,UAAWH,EAAKC,GAAIpB,gBAAiBmB,EAAKI,aAM9D,OACI,iBAAK3B,UAAWF,EAAAA,QAAhB,WACI,gBAAKE,UAAWF,EAAAA,eAAhB,SACKsB,KAEL,iBAAKpB,UAAWF,EAAAA,kBAAhB,UACK2B,GACD,SAAChB,EAAD,CAAkBG,SAVb,SAACgB,GACd7B,EAAM8B,YAAYD,aCf1B,GAAeE,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KApBC,SAACtC,GAGrB,MAAO,CACHW,gBAAiBX,EAAMuC,YAAY5B,gBACnCiB,aAAc5B,EAAMuC,YAAYX,iBAGb,SAACY,GACxB,MAAO,CACHJ,YAAa,SAACD,GACVK,GAASC,EAAAA,EAAAA,GAAcN,UPPH,SAACO,GAAe,IAEtCC,EAFqC,0IAIvC,WACI,OAAKC,KAAKtC,MAAML,QAET,SAACyC,GAAD,UAAeE,KAAKtC,SAFI,SAAC,KAAD,CAAUE,GAAI,eALV,GAEXqC,EAAAA,WAUhC,OADoCP,EAAAA,EAAAA,IAAQvC,EAARuC,CAAiCK,KOKzE,CAAuFG","sources":["components/hoc/withAuthRedirect.jsx","webpack://first-education-project/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://first-education-project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n    return ConectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"active__link\":\"DialogItem_active__link__zRlWh\",\"user__link\":\"DialogItem_user__link__dGHNM\"};","import React from 'react';\r\nimport style from './DialogItem.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst setActive = ({ isActive }) => isActive ? style.active__link : style.user__link;\r\n\r\nconst DialogItem = (props) => {\r\n    // debugger;\r\n    return (\r\n        <div className={style.dialog__item}>\r\n            <NavLink to={'/dialogs/' + props.userId} className={setActive}>{props.userName}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__fcxe-\",\"dialogs__messages\":\"Dialogs_dialogs__messages__IRNF-\",\"dialogs__textarea\":\"Dialogs_dialogs__textarea__Eoo7u\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={style.Message}>\r\n            {props.dialogsMessages}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Element } from '../common/FormControl/FormControl';\r\n\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst Textarea = Element('textarea');\r\n\r\n\r\nconst SendMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Your message'} name={'message'} component={Textarea} validate={[required, maxLength50]} />\r\n\r\n            </div>\r\n            <div><button>Send message</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst MessageReduxForm = reduxForm({ form: 'message' })(SendMessageForm)\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    // debugger;\r\n    const dialogsItemElements = props.dialogsItems.map(elem => {\r\n        // debugger;\r\n        return <DialogItem userId={elem.id} userName={elem.userName} />\r\n    })\r\n    const dialogsMessagesElement = props.dialogsMessages.map(elem => {\r\n        // debugger;\r\n\r\n        return <Message messageId={elem.id} dialogsMessages={elem.message} />\r\n    })\r\n\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData);\r\n    }\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogs__items}>\r\n                {dialogsItemElements}\r\n            </div>\r\n            <div className={style.dialogs__messages}>\r\n                {dialogsMessagesElement}\r\n                <MessageReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { sendMessageAC } from '../../redux/dialogsReducer';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    // debugger;\r\n\r\n    return {\r\n        dialogsMessages: state.dialogsPage.dialogsMessages,\r\n        dialogsItems: state.dialogsPage.dialogsItems\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (formData) => {\r\n            dispatch(sendMessageAC(formData))\r\n        }\r\n    }\r\n}\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)"],"names":["mapStateToPropsRedirect","state","isAuth","auth","setActive","isActive","style","props","className","to","userId","userName","dialogsMessages","maxLength50","maxLengthCreator","Textarea","Element","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","validate","required","dialogsItemElements","dialogsItems","map","elem","id","dialogsMessagesElement","messageId","message","formData","sendMessage","compose","connect","dialogsPage","dispatch","sendMessageAC","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}